.TH GROOVY "1" "December 2007"
.SH NAME
Groovy \- Agile dynamic language for the Java Virtual Machine
.SH DESCRIPTION
usage: groovy [options] [args]
options:
.TP
\fB\-D\fR,\-\-define <name=value>
define a system property
.TP
\fB\-a\fR,\-\-autosplit <splitPattern>
automatically split current line (defaults to
\&'\es')
.TP
\fB\-c\fR,\-\-encoding <charset>
specify the encoding of the files
.TP
\fB\-d\fR,\-\-debug
debug mode will print out full stack traces
.TP
\fB\-e\fR <script>
specify a command line script
.TP
\fB\-h\fR,\-\-help
usage information
.TP
\fB\-i\fR <extension>
modify files in place, create backup if
extension is given (e.g. '.bak')
.TP
\fB\-l\fR <port>
listen on a port and process inbound lines
.TP
\fB\-n\fR
process files line by line
.TP
\fB\-p\fR
process files line by line and print result
.TP
\fB\-v\fR,\-\-version
display the Groovy and JVM versions
.SH COMMANDS
.TP
\fBgroovy\fR:
Command to run a set of Groovy statements entered on the command
line (with \-e), or stored in a text file whose name is given on the
command.

example: groovy \-e 'System.in.readLines().each { println it }'
.TP
\fBgroovysh\fR:
Terminal-based interpreter for Groovy.
.TP
\fBgroovyConsole\fR: 
GUI interpreter for composing Groovy interactively.
.TP
\fBjava2groovy\fR:
The java2groovy tool reads class and interface definitions, written in
the Java programming language, and converts them into groovy source
files.
.SH "SEE ALSO"
.BR groovyc (1)
.SH AUTHOR
This manual page was generated using help2man and edited by Varun
Hiremath <varun@debian.org>, for the Debian project (but may be used
by others).
